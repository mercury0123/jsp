/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.69
 * Generated at: 2022-12-19 06:47:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class detail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Detail Page</title>\n");
      out.write("<!-- CSS only -->\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi\" crossorigin=\"anonymous\">\n");
      out.write("<!-- JavaScript Bundle with Popper -->\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-OERcA2EqjJCMA+/3y+gxIOqMEjwtxJY7qPCqsdltbNJuaOe923+mo//f6V8Qbsw3\" crossorigin=\"anonymous\"></script>\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"><link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin><link href=\"https://fonts.googleapis.com/css2?family=Dongle:wght@700&display=swap\" rel=\"stylesheet\">\n");
      out.write("</head>\n");
      out.write("<style>\n");
      out.write(" 	@import url('https://fonts.googleapis.com/css2?family=Dongle:wght@700&display=swap');\n");
      out.write(" 		\n");
      out.write("    *{              \n");
      out.write("        margin: 0;\n");
      out.write("        padding: 0;\n");
      out.write("        box-sizing: border-box;            \n");
      out.write("    }\n");
      out.write("   \n");
      out.write("    h1 {\n");
      out.write("    	\n");
      out.write("    	text-align: center;\n");
      out.write("    	margin : 50px 50px;\n");
      out.write("    }\n");
      out.write("    a {    \n");
      out.write("		text-decoration : none;\n");
      out.write("		color : white;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("    header{    \n");
      out.write("		position: fixed; top:0px; width:100%; height: 60px;\n");
      out.write("		background-color: #0D6EFD; \n");
      out.write("		font-family: 'Dongle', sans-serif;\n");
      out.write("		color:white; \n");
      out.write("		text-align: center; \n");
      out.write("		line-height: 60px;\n");
      out.write("		font-size: 60px	\n");
      out.write("  	}\n");
      out.write("    \n");
      out.write("	nav{\n");
      out.write("	   	position:fixed; top:60px; width:100%; height:40px;\n");
      out.write("		background-color:lightblue; \n");
      out.write("		font-family: 'Dongle', sans-serif;\n");
      out.write("		color : white; \n");
      out.write("		text-align: right;  \n");
      out.write("		line-height: 40px; \n");
      out.write("		padding-right: 40px;  \n");
      out.write("		font-size: 30px  	\n");
      out.write("    }\n");
      out.write("	    \n");
      out.write("    footer{\n");
      out.write("    	position: fixed; bottom:0px; width:100%; height: 80px;\n");
      out.write("		background-color: #0D6EFD; \n");
      out.write("		color:white; text-align: center; line-height: 40px;\n");
      out.write("		font-size: 20px\n");
      out.write("    }\n");
      out.write("	\n");
      out.write("    .container{\n");
      out.write("        width: 600px;\n");
      out.write("        margin: 0;\n");
      out.write("        position: absolute;\n");
      out.write("        top: 50%;\n");
      out.write("        left: 50%;\n");
      out.write("        transform: translate(-50%,-50%);\n");
      out.write("        text-align: center;\n");
      out.write("    }\n");
      out.write("    table {\n");
      out.write("	    margin-left:auto; \n");
      out.write("	    margin-right:auto;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	table, td, th {\n");
      out.write("	    border-collapse : collapse;\n");
      out.write("	    border : 1px solid black;\n");
      out.write("	}\n");
      out.write("</style>\n");
      out.write("<body>\n");
      out.write("<header>\n");
      out.write("글 상세 페이지\n");
      out.write("</header>\n");
      out.write("<nav>\n");
      out.write("<a href=\"/brd/register\">게시글 등록</a>&nbsp;|&nbsp;<a href=\"/brd/list\">리스트로</a> &nbsp;|&nbsp; <a href=\"/index.jsp\"> 홈으로</a>\n");
      out.write("</nav>\n");
      out.write("<section>\n");
      out.write("<div class=\"container\">\n");
      out.write("\n");
      out.write("	<div class=\"header\"><h1>Board Detail Page</h1></div>\n");
      out.write("	\n");
      out.write("	<div class=\"main\">\n");
      out.write("\n");
      out.write("		<table border=\"1\">\n");
      out.write("			<tr>\n");
      out.write("				<th>게시글 번호</th>\n");
      out.write("				<td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${bvo.bno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\n");
      out.write("			</tr>\n");
      out.write("			<tr>\n");
      out.write("				<th>제목</th>\n");
      out.write("				<td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${bvo.title}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\n");
      out.write("			</tr>\n");
      out.write("			<tr>\n");
      out.write("				<th>작성자</th>\n");
      out.write("				<td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${bvo.writer}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\n");
      out.write("			</tr>\n");
      out.write("			<tr>\n");
      out.write("				<th>작성일자</th>\n");
      out.write("				<td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${bvo.reg_date}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\n");
      out.write("			</tr>\n");
      out.write("			<tr>\n");
      out.write("				<th>내용</th>\n");
      out.write("				<td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${bvo.content}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\n");
      out.write("			</tr>\n");
      out.write("			<tr>\n");
      out.write("				<th colspan=\"2\">\n");
      out.write("					<a href=\"/brd/modify?bno=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${bvo.bno }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"><button type=\"submit\" class=\"btn btn-outline-primary\">수정</button></a>\n");
      out.write("					<a href=\"/brd/remove?bno=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${bvo.bno }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"><button type=\"submit\" class=\"btn btn-danger\">삭제</button></a>\n");
      out.write("					<a href=\"/brd/list\"><button type=\"submit\" class=\"btn btn-outline-primary\">리스트</button></a>\n");
      out.write("					<a href=\"/index.jsp\"><button type=\"button\" class=\"btn btn-primary\">홈으로</button></a>\n");
      out.write("				</th>				\n");
      out.write("			</tr>			\n");
      out.write("		</table>\n");
      out.write("		<br>\n");
      out.write("	</div>\n");
      out.write("</div> \n");
      out.write("</section>\n");
      out.write("<footer>\n");
      out.write("<a href=\"/brd/register\">REGISTER</a>&nbsp;|&nbsp;<a href=\"/brd/list\">LIST</a>&nbsp;|&nbsp;<a href=\"/index.jsp\">HOME</a><br>\n");
      out.write("Hong Soon Gyu COPYRIGHTⓒ 2022 ALL RIGHTS RESERVED.\n");
      out.write("Created by Hong\n");
      out.write("</footer>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
