package controller;

import java.io.IOException;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import service.BoardService;
import service.BoardServiceImpl;


@WebServlet("/brd/*")
public class BoardController extends HttpServlet {
	private static final long serialVersionUID = 1L;	
	private static final Logger log = LoggerFactory.getLogger(BoardController.class); 	
	private String destPage; 		
	private RequestDispatcher rdp; 	
	private int isOk; 				
	
	private BoardService bsv; //service에 interface생성
	public BoardController() {
		bsv =new BoardServiceImpl(); //bsv 구현할 객체 생생 service에 class생성
	}
		
	protected void service(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {
		req.setCharacterEncoding("utf-8");
		res.setCharacterEncoding("utf-8");
		res.setContentType("text/html; charset=UTF-8");	//index값 입력
		
		String uri = req.getRequestURI();	//jsp에서 오는 요청주소를 uri에 띄움
		log.info("uri>>>"+uri);		
		
		// uri에서 요청하는 구문만 잘라내기 register, list 
		String path = uri.substring(uri.lastIndexOf('/')+1);
		log.info("path>>>"+path);	
		
		switch(path) {
		
		case "register":
			//글쓰기 페이지로 이동해서 페이지를 출력
			destPage="/board/register.jsp";
			System.out.println("path >>>"+path); //둘다 같은 내용
			log.info("path >>>"+path);
			break;
		}		
		
		//목적지 경로로 응답함 (전달)
		rdp = req.getRequestDispatcher(destPage);
		rdp.forward(req, res);
	}
	
	//모두 service 값으로 처리
	protected void doGet(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {
		service(req, res);
	}
	
	protected void doPost(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {		
		service(req, res);
	}
}